openapi: "3.0.1"
info:
  title: "Address CRI"
  version: "2022-01-29T19:35:02Z"
servers:
  - url: "https://w4n55uhzxk.execute-api.eu-west-2.amazonaws.com/{basePath}"
    variables:
      basePath:
        default: "/dev"
x-amazon-apigateway-request-validators:
  all:
    validateRequestBody: true
    validateRequestParameters: true
  body-only:
    validateRequestBody: true
    validateRequestParameters: false
x-amazon-apigateway-request-validator: body-only
paths:
  /session:
    put:
      x-amazon-apigateway-request-validator : body-only
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Authorization"
        required: true
      responses:
        400:
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        201:
          description: "201 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Session"
      x-amazon-apigateway-integration:
        type: "aws"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:130355686670:function:cri-address-session-cri-address-philm/invocations"
        requestTemplates:
          application/json: "#set ($root=$input.path('$')) { \"response_type\": \"$root.response_type\" }"
        responses:
          201:
            statusCode: 201
            responseTemplates:
              application/json: "#set ($root=$input.path('$')) { \"session_id\": \"$root.body\" }"
          500:
            statusCode: 500
            responseTemplates:
              application/json: "#set ($root=$input.path('$')) { \"message\": \"$root.body\" }"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
components:
  schemas:
    Authorization:
      required:
        - "client_id"
        - "redirect_uri"
        - "request"
        - "response_type"
        - "state"
      type: "object"
      properties:
        response_type:
          type: "string"
          pattern: "code"
          example: "code"
        client_id:
          type: "string"
        state:
          type: "string"
        redirect_uri:
          type: "string"
        request:
          type: "string"
    Error:
      required:
        - "message"
      type: "object"
      properties:
        code:
          type: "string"
        message:
          type: "string"
    Session:
      required:
        - "session_id"
      type: "object"
      properties:
        session_id:
          type: "string"
