AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Digital Identity IPV CRI Address API"

Parameters:
  CodeSigningConfigArn:
    Type: String
    Default: "none"
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
  Environment:
    Description: environment name
    Default: dev
    Type: String
    AllowedValues:
      - dev
      - build
      - staging
      - integration
      - prod
    ConstraintDescription: specify dev, build, staging, integration or prod for environment

  OrdnanceSurveyAPIURL:
    Description: Ordnance Survey API URL
    Type: String
    Default: "https://api.os.uk/search/places/v1/postcode"

Conditions:
  UseCodeSigning:
    Fn::Not:
      - Fn::Equals:
          - !Ref CodeSigningConfigArn
          - "none"

  CreateDevResources: !Equals
    - !Ref Environment
    - dev
  CreateStagingResources: !Equals
    - !Ref Environment
    - staging
  CreateIntegrationResources: !Equals
    - !Ref Environment
    - integration
  CreateProdResources: !Equals
    - !Ref Environment
    - prod
  CreateNonProdResources: !Not
    - Condition: CreateProdResources

Globals:
  Function:
    CodeSigningConfigArn: !If
      - CreateDevResources
      - !Ref AWS::NoValue
      - !Ref CodeSigningConfigArn
    Timeout: 30 # seconds
    Runtime: java11
    AutoPublishAlias: live
    Tracing: Active
    MemorySize: 512
    Environment:
      Variables:
        AWS_STACK_NAME: !Sub ${AWS::StackName}
        POWERTOOLS_LOG_LEVEL: INFO

Resources:
  AddressApi:
    Type: AWS::Serverless::Api
    Properties:
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*'
          HttpMethod: '*'
      AccessLogSetting:
        Format: '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "caller":"$context.identity.caller", "user":"$context.identity.user","requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath", "status":"$context.status","protocol":"$context.protocol", "responseLength":"$context.responseLength" }'
      TracingEnabled: true
      Name: !Sub "address-cri-${AWS::StackName}"
      StageName: !Ref Environment
      #      Auth:
      #        DefaultAuthorizer: AWS_IAM
      DefinitionBody:
        openapi: "3.0.1" # workaround to get `sam validate` to work
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: { } # workaround to get `sam validate` to work
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: './api.yaml'
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: REGIONAL
    DependsOn: [SessionFunction, PostcodeLookupFunction, AddressFunction, AccessTokenFunction]

  SessionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/session/build/distributions/session.zip
      Handler: uk.gov.di.ipv.cri.address.api.handler.SessionHandler::handleRequest
      Environment:
        Variables:
          POWERTOOLS_METRICS_NAMESPACE: di-ipv-cri-address-api
          POWERTOOLS_SERVICE_NAME: di-ipv-cri-address-api-session
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBWritePolicy:
            TableName:
              Ref: AddressSessionTable
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/AddressSessionTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/AddressSessionTtl"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParametersByPath
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"


  PostcodeLookupFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/postcode-lookup/build/distributions/postcode-lookup.zip
      Handler: uk.gov.di.ipv.cri.address.api.handler.PostcodeLookupHandler::handleRequest
      Environment:
        Variables:
          POWERTOOLS_METRICS_NAMESPACE: di-ipv-cri-address-api
          POWERTOOLS_SERVICE_NAME: di-ipv-cri-address-api-postcode-lookup
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName:
              Ref: AddressSessionTable
        - Statement:
            - Sid: ReadSecretsPolicy
              Effect: Allow
              Action:
                - 'secretsmanager:*'
              Resource:
                - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${AWS::StackName}/OrdnanceSurveyAPIKey*"
            - Sid: ReadParametersPolicy
              Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/OrdnanceSurveyAPIURL"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/AddressSessionTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/AddressSessionTtl"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParametersByPath
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"

  AddressFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/address/build/distributions/address.zip
      Handler: uk.gov.di.ipv.cri.address.api.handler.AddressHandler::handleRequest
      Environment:
        Variables:
          POWERTOOLS_METRICS_NAMESPACE: di-ipv-cri-address-api
          POWERTOOLS_SERVICE_NAME: di-ipv-cri-address-api-address
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName:
              Ref: AddressSessionTable
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/AddressSessionTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/AddressSessionTtl"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParametersByPath
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"


  AccessTokenFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/accesstoken/build/distributions/accesstoken.zip
      Handler: uk.gov.di.ipv.cri.address.api.handler.AccessTokenHandler::handleRequest
      Environment:
        Variables:
          POWERTOOLS_METRICS_NAMESPACE: di-ipv-cri-address-api
          POWERTOOLS_SERVICE_NAME: di-ipv-cri-address-api-access-token
      Policies:
        - DynamoDBReadPolicy:
            TableName:
              Ref: AddressSessionTable
        - DynamoDBWritePolicy:
            TableName:
              Ref: AddressSessionTable
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/AddressSessionTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/AddressSessionTtl"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"

  AddressSessionTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Sub "address-session-${AWS::StackName}"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        -
          AttributeName: "sessionId"
          AttributeType: "S"
        -
          AttributeName: "authorizationCode"
          AttributeType: "S"
        -
          AttributeName: "token"
          AttributeType: "S"

      KeySchema:
        -
          AttributeName: "sessionId"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        -
          IndexName: "authorizationCode-index"
          KeySchema:
            -
              AttributeName: "authorizationCode"
              KeyType: "HASH"
          Projection:
            NonKeyAttributes:
              - "session-id"
            ProjectionType: "INCLUDE"
        -
          IndexName: "token-index"
          KeySchema:
            -
              AttributeName: "token"
              KeyType: "HASH"
          Projection:
            NonKeyAttributes:
              - "session-id"
            ProjectionType: "INCLUDE"
      TimeToLiveSpecification:
        AttributeName: expiry-date
        Enabled: true

  ParameterAddressSessionTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/AddressSessionTableName"
      Value: !Sub address-session-${AWS::StackName}
      Type: String
      Description: address session dynamodb table name

  ParameterOrdnanceSurveyAPIURL:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/OrdnanceSurveyAPIURL"
      Value: !Ref OrdnanceSurveyAPIURL
      Type: String
      Description: Ordnance Survey Postcode Lookup API URL

  ParameterAddressSessionTtl:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/AddressSessionTtl"
      Value: 172800 # 2 days
      Type: String
      Description: default time to live for an address session item (seconds)

  ParameterIPVCoreStubPublicCertificateToVerify:
    Type: AWS::SSM::Parameter
    Condition: CreateNonProdResources
    Properties:
      Name: !Sub /${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/publicCertificateToVerify
      Value: MIIDJDCCAgwCCQD3oEU83RePojANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJHQjEXMBUGA1UECgwOQ2FiaW5ldCBPZmZpY2UxDDAKBgNVBAsMA0dEUzEeMBwGA1UEAwwVSVBWIENvcmUgU3R1YiBTaWduaW5nMB4XDTIyMDIwNDE3NDg1NFoXDTMyMDIwMjE3NDg1NFowVDELMAkGA1UEBhMCR0IxFzAVBgNVBAoMDkNhYmluZXQgT2ZmaWNlMQwwCgYDVQQLDANHRFMxHjAcBgNVBAMMFUlQViBDb3JlIFN0dWIgU2lnbmluZzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMT9tGIIujF53SfiHsc+BDra/5qb/PObr8BfutWq4/9kp32eHKOBqTYberXeKJhIS80OB9AC/55QO3V2HdajJJXZbj37shvNy5HcGNxVYRFWt/qyh3+SRTbgfCnfs4QQ6uSLQkJof347qGi26kJU7RuM47grfGCahMvdEOnQgeIHLKw1yqmu8yniy0Lf48jnGlyR6r6QG7UMI2Dk5hdGOEw2WZCoSGLsXII94xS3JKB4sbjEfyuMg87o3pBjoks1LP8KXRcbkBIlc2q8DtEh2YtP57VJfdNhR/gxtHjZhL2E6q+MM158/1xwyXIGcllf+MIserihKEnmsk6wKaJcalcCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAmiAOKd9ZQSjZmIB0GBD1lJaiI1xWwHbwhhuwFsO3YzrIOmB/pDYh0e2FFdsYZ/I48VZn4WQM8mexF/3B2mnG3gXbqHtY8tRPLa0nZq53cOWczKF8RUM2xeWwitYZvfMtx6rRliCUv91IbmKHeGRGiOifOoGxvj8qp30lB2mRBuxP2N4VUAdkqWUjnTdPJr+5eHQeFTbgFg44FxJ59Mz+gGbv4/dQo8ZtFFA/Cqwvz4pevFSken4e9wRF6JGA+AuYdW3tiVutDo/UF+aFir/pDfcrCtyes9xiUv3Iu9x7zKEUG7hwMj0gG83Cvx5SuWJyPb4eKrrdRlRRmLD7PsucUw==
      Type: String

  ParameterIPVCoreStubAuthenticationAlg:
    Type: AWS::SSM::Parameter
    Condition: CreateNonProdResources
    Properties:
      Name: !Sub /${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/authenticationAlg
      Value: RS256
      Type: String

  ParameterIPVCoreStubRedirectURI:
    Type: AWS::SSM::Parameter
    Condition: CreateNonProdResources
    Properties:
      Type: String
      Name: !Sub /${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/redirectUri
      Value: https://di-ipv-core-stub.london.cloudapps.digital/callback

  ParameterIPVCoreStubIssuer:
    Type: AWS::SSM::Parameter
    Condition: CreateNonProdResources
    Properties:
      Type: String
      Name: !Sub /${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/issuer
      Value: ipv-core-stub

  AccessTokenFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AccessTokenFunction.Arn
      Principal: apigateway.amazonaws.com

  SessionFunctionPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SessionFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt SessionFunction.Arn
      Principal: apigateway.amazonaws.com

  PostcodeLookupFunctionPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - PostcodeLookupFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt PostcodeLookupFunction.Arn
      Principal: apigateway.amazonaws.com

  AddressFunctionPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - AddressFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AddressFunction.Arn
      Principal: apigateway.amazonaws.com


Outputs:
  AddressApiBaseUrl:
    Value: !Sub "https://${AddressApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/"
    Export:
      Name: !Sub ${AWS::StackName}-AddressApiBaseUrl

  SessionFunctionApi:
    Description: "API Gateway endpoint URL for Prod stage for session function"
    Value: !Sub "https://${AddressApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/session/"
    Export:
      Name: !Sub ${AWS::StackName}-SessionFunctionApi
  SessionFunction:
    Value: !GetAtt SessionFunction.Arn

  PostcodeLookupFunctionApi:
    Description: "API Gateway endpoint URL for Prod stage for postcode lookup function"
    Value: !Sub "https://${AddressApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/postcode-lookup/"
    Export:
      Name: !Sub ${AWS::StackName}-PostcodeLookupFunctionApi
  PostcodeLookupFunction:
    Value: !GetAtt PostcodeLookupFunction.Arn

  AddressFunctionApi:
    Description: "API Gateway endpoint URL for Prod stage for address update function"
    Value: !Sub "https://${AddressApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/address/"
    Export:
      Name: !Sub ${AWS::StackName}-AddressFunctionApi
  AddressFunction:
      Value: !GetAtt AddressFunction.Arn

  PostcodeLookupFunctionIamRole:
    Description: "IAM role for the postcode lookup function"
    Value: !GetAtt PostcodeLookupFunctionRole.Arn

  SessionFunctionIamRole:
    Description: "IAM role for the session function"
    Value: !GetAtt SessionFunctionRole.Arn

  AccessTokenFunction:
    Value: !GetAtt AccessTokenFunction.Arn

  AddressFunctionIamRole:
    Description: "IAM role for the address function"
    Value: !GetAtt AddressFunctionRole.Arn
