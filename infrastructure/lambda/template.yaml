AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Digital Identity IPV CRI Address API"

Parameters:
  CodeSigningConfigArn:
    Type: String
    Default: "none"
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
  Environment:
    Description: "The environment type"
    Type: "String"
    AllowedValues:
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"
    ConstraintDescription: must be dev, build, staging, integration or production
  PermissionsBoundary:
    Description: "The ARN of the permissions boundary to apply when creating IAM roles"
    Type: String
    Default: "none"

Conditions:
  CreateDevResources: !Equals
    - !Ref Environment
    - dev
  IsProdEnvironment: !Equals
    - !Ref Environment
    - production
  IsStubEnvironment: !Or
    - !Equals [ !Ref Environment, dev]
    - !Equals [ !Ref Environment, build ]
    - !Equals [ !Ref Environment, staging ]
    - !Equals [ !Ref Environment, integration ]
  IsProdLikeEnvironment: !Or
    - !Equals [ !Ref Environment, staging ]
    - !Equals [ !Ref Environment, integration ]
    - !Equals [ !Ref Environment, production ]
  IsDevEnvironment: !Equals
    - !Ref Environment
    - dev
  IsNotDevEnvironment: !Not
    - Condition: IsDevEnvironment
  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"
Globals:
  Function:
    VpcConfig:
      SecurityGroupIds:
        - !ImportValue cri-vpc-LambdaSecurityGroup
      SubnetIds: !Split [ ",", !ImportValue cri-vpc-PrivateSubnets ]
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    CodeSigningConfigArn: !If
      - CreateDevResources
      - !Ref AWS::NoValue
      - !Ref CodeSigningConfigArn
    Timeout: 30 # seconds
    Runtime: java11
    AutoPublishAlias: live
    Tracing: Active
    MemorySize: 512
    Environment:
      Variables:
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
        AWS_STACK_NAME: !Sub ${AWS::StackName}
        POWERTOOLS_LOG_LEVEL: INFO
        SQS_AUDIT_EVENT_PREFIX: IPV_ADDRESS_CRI
        POWERTOOLS_METRICS_NAMESPACE: di-ipv-cri-address-api
    ProvisionedConcurrencyConfig: !If
      - IsProdEnvironment
      - ProvisionedConcurrentExecutions: 1
      - !Ref AWS::NoValue
Mappings:

  SessionTtlMapping:
    Environment:
      dev: 7200 # 2 hours
      build: 7200 # 2 hours
      staging: 7200 # 2 hours
      integration: 7200 # 2 hours
      production: 7200 # 2 hours

  MaxJwtTtlMapping:
    Environment:
      dev: 7200 # 2 hours
      build: 7200 # 2 hours
      staging: 7200 # 2 hours
      integration: 7200 # 2 hours
      production: 7200 # 2 hours

  IPVCoreStubAuthenticationAlgMapping:
    Environment:
      dev: "ES256"
      build: "ES256"
      staging: "ES256"
      integration: "ES256"

  IPVCoreStubPreProdAuthenticationAlgMapping:
    Environment:
      production: "ES256"

  IPVCore1AuthenticationAlgMapping:
    Environment:
      staging: "ES256"
      integration: "ES256"
      production: "ES256"

  IPVCoreStubAudienceMapping:
    Environment:
      dev: "https://review-a.dev.account.gov.uk"
      build: "https://review-a.build.account.gov.uk"
      staging: "https://review-a.staging.account.gov.uk"
      integration: "https://review-a.integration.account.gov.uk"

  IPVCoreStubPreProdAudienceMapping:
    Environment:
      production: "https://review-a.account.gov.uk"

  IPVCore1AudienceMapping:
    Environment:
      staging: "https://review-a.staging.account.gov.uk"
      integration: "https://review-a.integration.account.gov.uk"
      production: "https://review-a.account.gov.uk"

  IPVCoreStubIssuerMapping:
    Environment:
      dev: "https://di-ipv-core-stub.london.cloudapps.digital"
      build: "https://di-ipv-core-stub.london.cloudapps.digital"
      staging: "https://di-ipv-core-stub.london.cloudapps.digital"
      integration: "https://di-ipv-core-stub.london.cloudapps.digital"

  IPVCoreStubPreProdIssuerMapping:
    Environment:
      production: "https://di-ipv-core-stub.london.cloudapps.digital"

  IPVCore1IssuerMapping:
    Environment:
      staging: "https://identity.staging.account.gov.uk"
      integration: "https://identity.integration.account.gov.uk"
      production: "https://identity.account.gov.uk"

  IPVCoreStubPublicSigningJwkBase64Mapping:
    Environment:
      dev: "ewogICAgImt0eSI6ICJFQyIsCiAgICAidXNlIjogInNpZyIsCiAgICAiY3J2IjogIlAtMjU2IiwKICAgICJraWQiOiAiaXB2LWNvcmUtc3R1Yi0xLWZyb20tbWtqd2sub3JnIiwKICAgICJ4IjogIklmUjFQejlPdWNJMll3YldKVGEtT3h0MDJ6X3pnTkR5RmtocGZ3OFFXcjAiLAogICAgInkiOiAiWGo2alJ6S0EwUWVTTEMtZTE1bVg3U2hucG9xZ0c4d1F3ZWcwNlhJYTBEcyIsCiAgICAiYWxnIjogIkVTMjU2Igp9"
      build: "ewogICAgImt0eSI6ICJFQyIsCiAgICAidXNlIjogInNpZyIsCiAgICAiY3J2IjogIlAtMjU2IiwKICAgICJraWQiOiAiaXB2LWNvcmUtc3R1Yi0xLWZyb20tbWtqd2sub3JnIiwKICAgICJ4IjogIklmUjFQejlPdWNJMll3YldKVGEtT3h0MDJ6X3pnTkR5RmtocGZ3OFFXcjAiLAogICAgInkiOiAiWGo2alJ6S0EwUWVTTEMtZTE1bVg3U2hucG9xZ0c4d1F3ZWcwNlhJYTBEcyIsCiAgICAiYWxnIjogIkVTMjU2Igp9"
      staging: "ewogICAgImt0eSI6ICJFQyIsCiAgICAidXNlIjogInNpZyIsCiAgICAiY3J2IjogIlAtMjU2IiwKICAgICJraWQiOiAiaXB2LWNvcmUtc3R1Yi0xLWZyb20tbWtqd2sub3JnIiwKICAgICJ4IjogIklmUjFQejlPdWNJMll3YldKVGEtT3h0MDJ6X3pnTkR5RmtocGZ3OFFXcjAiLAogICAgInkiOiAiWGo2alJ6S0EwUWVTTEMtZTE1bVg3U2hucG9xZ0c4d1F3ZWcwNlhJYTBEcyIsCiAgICAiYWxnIjogIkVTMjU2Igp9"
      integration: "ewogICAgImt0eSI6ICJFQyIsCiAgICAidXNlIjogInNpZyIsCiAgICAiY3J2IjogIlAtMjU2IiwKICAgICJraWQiOiAiaXB2LWNvcmUtc3R1Yi0xLWZyb20tbWtqd2sub3JnIiwKICAgICJ4IjogIklmUjFQejlPdWNJMll3YldKVGEtT3h0MDJ6X3pnTkR5RmtocGZ3OFFXcjAiLAogICAgInkiOiAiWGo2alJ6S0EwUWVTTEMtZTE1bVg3U2hucG9xZ0c4d1F3ZWcwNlhJYTBEcyIsCiAgICAiYWxnIjogIkVTMjU2Igp9"

  IPVCoreStubPreProdPublicSigningJwkBase64Mapping:
    Environment:
      production: "ewogICAgImt0eSI6ICJFQyIsCiAgICAidXNlIjogInNpZyIsCiAgICAiY3J2IjogIlAtMjU2IiwKICAgICJraWQiOiAiaXB2LWNvcmUtc3R1Yi0xLWZyb20tbWtqd2sub3JnIiwKICAgICJ4IjogIklmUjFQejlPdWNJMll3YldKVGEtT3h0MDJ6X3pnTkR5RmtocGZ3OFFXcjAiLAogICAgInkiOiAiWGo2alJ6S0EwUWVTTEMtZTE1bVg3U2hucG9xZ0c4d1F3ZWcwNlhJYTBEcyIsCiAgICAiYWxnIjogIkVTMjU2Igp9"

  IPVCore1PublicSigningJwkBase64Mapping:
    Environment:
      staging: "eyJrdHkiOiJFQyIsImNydiI6IlAtMjU2IiwieCI6ImtlMVRNRnFNb0Z5eHg1eXpOdFFRbGw0dk9yeHZUdFBKQ0huUzRqOHpoMlUiLCJ5IjoicURLX0g4QXpKS2FIbU1zaHg5TGp2LTB0ek5rV2EtSkVHUzJtZHRKUjFPQSJ9"
      integration: "eyJrdHkiOiJFQyIsImNydiI6IlAtMjU2IiwieCI6IkJUUWdWQjU0RE9JcDU0eGRVSVg0SGtUX3pCdjZHdVdMV1RUTkdxMk15dEkiLCJ5IjoiTFFRamx5ZEtOMUhXZFJQcFBpalJObEJrbi1qaDgzZzBBUmIyNms2WVh1byJ9"
      production: "eyJrdHkiOiJFQyIsImNydiI6IlAtMjU2IiwieCI6IlVQdlU1TlBtRUxyV2lXU01WZkREN0c4dTNFSllyeXFQSVo0Nlc5TUFsUmMiLCJ5Ijoicjc3RjItS1BocHZUSUdFV2d0NVNtYXZTdkJVSENxV1V4RDZSR19GSkhWayJ9"

  IPVCoreStubRedirectURIMapping:
    Environment:
      dev: "https://di-ipv-core-stub.london.cloudapps.digital/callback"
      build: "https://di-ipv-core-stub.london.cloudapps.digital/callback"
      staging: "https://di-ipv-core-stub.london.cloudapps.digital/callback"
      integration: "https://di-ipv-core-stub.london.cloudapps.digital/callback"

  IPVCoreStubPreProdRedirectURIMapping:
    Environment:
      production: "https://di-ipv-core-stub-pre-prod.london.cloudapps.digital/callback"

  IPVCore1RedirectURIMapping:
    Environment:
      staging: "https://identity.staging.account.gov.uk/credential-issuer/callback?id=address"
      integration: "https://identity.integration.account.gov.uk/credential-issuer/callback?id=address"
      production: "https://identity.account.gov.uk/credential-issuer/callback?id=address"

  OrdnanceSurveyAPIURLMapping:
    Environment:
      dev: "https://api.os.uk/search/places/v1/postcode"
      build: "https://api.os.uk/search/places/v1/postcode"
      staging: "https://api.os.uk/search/places/v1/postcode"
      integration: "https://api.os.uk/search/places/v1/postcode"
      production: "https://api.os.uk/search/places/v1/postcode"

  VerifiableCredentialIssuerMapping:
    Environment:
      dev: "https://review-a.dev.account.gov.uk"
      build: "https://review-a.build.account.gov.uk"
      staging: "https://review-a.staging.account.gov.uk"
      integration: "https://review-a.integration.account.gov.uk"
      production: "https://review-a.account.gov.uk"

Resources:
  PublicAddressApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Public Address CRI API
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*'
          HttpMethod: '*'
          # Disable data trace in production to avoid logging customer sensitive information
          DataTraceEnabled: !If [IsProdEnvironment, false, true]
          MetricsEnabled: true
          ThrottlingRateLimit: 5
          ThrottlingBurstLimit: 10
      AccessLogSetting:
        DestinationArn: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PublicAddressApiAccessLogGroup}'
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }
      TracingEnabled: true
      Name: !Sub "${AWS::StackName}-PublicAddressApi"
      StageName: !Ref Environment
      DefinitionBody:
        openapi: "3.0.1" # workaround to get `sam validate` to work
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: { } # workaround to get `sam validate` to work
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: './api.yaml'
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: REGIONAL

  PrivateAddressApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Private Address CRI API
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*'
          HttpMethod: '*'
          # Disable data trace in production to avoid logging customer sensitive information
          DataTraceEnabled: !If [IsProdEnvironment, false, true]
          MetricsEnabled: true
          ThrottlingRateLimit: 5
          ThrottlingBurstLimit: 10
      AccessLogSetting:
        DestinationArn: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PrivateAddressApiAccessLogGroup}'
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }
      TracingEnabled: true
      Name: !Sub "${AWS::StackName}-PrivateAddressApi"
      StageName: !Ref Environment
      DefinitionBody:
        openapi: "3.0.1" # workaround to get `sam validate` to work
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: { } # workaround to get `sam validate` to work
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: './private-api.yaml'
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: PRIVATE
      Auth:
        ResourcePolicy:
          CustomStatements:
            - Action: 'execute-api:Invoke'
              Effect: Allow
              Principal: '*'
              Resource:
                - 'execute-api:/*'
            - Action: 'execute-api:Invoke'
              Effect: Deny
              Principal: '*'
              Resource:
                - 'execute-api:/*'
              Condition:
                StringNotEquals:
                  aws:SourceVpce: !If
                    - CreateDevResources
                    - vpce-082cab7c78139eb54
                    - !ImportValue cri-vpc-ApiGatewayVpcEndpointId

  PublicAddressApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-${PublicAddressApi}-public-AccessLogs
      RetentionInDays: 365

  PublicAddressApiAccessLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref PublicAddressApiAccessLogGroup

  PrivateAddressApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-${PrivateAddressApi}-private-AccessLogs
      RetentionInDays: 365

  PrivateAddressApiAccessLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref PrivateAddressApiAccessLogGroup

  SessionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../common-lambdas/session/build/distributions/session.zip
      Handler: uk.gov.di.ipv.cri.common.api.handler.SessionHandler::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: di-ipv-cri-address-api-session
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBWritePolicy:
            TableName:
              Ref: SessionTable
        - DynamoDBWritePolicy:
            TableName:
              Ref: PersonIdentityTable
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - KMSDecryptPolicy:
            KeyId: !ImportValue core-infrastructure-CriDecryptionKey1Id
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTtl"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/AuthRequestKmsEncryptionKeyId"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/PersonIdentityTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/verifiable-credential/issuer"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParametersByPath
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"
        - Statement:
            - Sid: auditEventQueueKmsEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn

  SessionFunctionLogsSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn:
      - SessionFunction
    Condition: IsNotDevEnvironment
    Properties:
      LogGroupName: !Sub "/aws/lambda/${SessionFunction}"
      FilterPattern: " "
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"

  PostcodeLookupFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../lambdas/postcode-lookup/build/distributions/postcode-lookup.zip
      Handler: uk.gov.di.ipv.cri.address.api.handler.PostcodeLookupHandler::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: di-ipv-cri-address-api-postcode-lookup
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName:
              Ref: SessionTable
        - Statement:
            - Sid: ReadSecretsPolicy
              Effect: Allow
              Action:
                - 'secretsmanager:*'
              Resource:
                - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${AWS::StackName}/OrdnanceSurveyAPIKey*"
            - Sid: ReadParametersPolicy
              Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/OrdnanceSurveyAPIURL"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTtl"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParametersByPath
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"

  PostcodeLookupFunctionLogsSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn:
      - PostcodeLookupFunction
    Condition: IsNotDevEnvironment
    Properties:
      LogGroupName: !Sub "/aws/lambda/${PostcodeLookupFunction}"
      FilterPattern: " "
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"

  AddressFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../lambdas/address/build/distributions/address.zip
      Handler: uk.gov.di.ipv.cri.address.api.handler.AddressHandler::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: di-ipv-cri-address-api-address
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName:
              Ref: SessionTable
        - DynamoDBCrudPolicy:
            TableName:
              Ref: AddressTable
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - Statement:
            - Sid: auditEventQueueKmsEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/AddressTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTtl"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/verifiable-credential/issuer"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParametersByPath
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"

  AddressFunctionLogsSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn:
      - AddressFunction
    Condition: IsNotDevEnvironment
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AddressFunction}"
      FilterPattern: " "
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"

  AuthorizationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../common-lambdas/authorization/build/distributions/authorization.zip
      Handler: uk.gov.di.ipv.cri.common.api.handler.AuthorizationHandler::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: di-ipv-cri-address-api-authorization
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName: !Ref SessionTable
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTableName"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParametersByPath
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"

  AuthorizationFunctionLogsSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn:
      - AuthorizationFunction
    Condition: IsNotDevEnvironment
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AuthorizationFunction}"
      FilterPattern: " "
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"

  AccessTokenFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../common-lambdas/accesstoken/build/distributions/accesstoken.zip
      Handler: uk.gov.di.ipv.cri.common.api.handler.AccessTokenHandler::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: di-ipv-cri-address-api-access-token
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: SessionTable
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTtl"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParametersByPath
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"

  AccessTokenFunctionLogsSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn:
      - AccessTokenFunction
    Condition: IsNotDevEnvironment
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AccessTokenFunction}"
      FilterPattern: " "
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"

  IssueCredentialFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: uk.gov.di.ipv.cri.address.api.handler.IssueCredentialHandler::handleRequest
      CodeUri: ../../lambdas/issuecredential/build/distributions/issuecredential.zip
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: di-ipv-cri-address-api-issuecredential
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName: !Ref SessionTable
        - DynamoDBReadPolicy:
            TableName: !Ref AddressTable
        - Statement:
            Effect: Allow
            Action:
              - "kms:Sign"
            Resource: !ImportValue core-infrastructure-CriVcSigningKey1Arn
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - SSMParameterReadPolicy:
            ParameterName: !Sub "${AWS::StackName}/*"
        - Statement:
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource:
              - !ImportValue AuditEventQueueEncryptionKeyArn

  IssueCredentialFunctionLogsSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn:
      - IssueCredentialFunction
    Condition: IsNotDevEnvironment
    Properties:
      LogGroupName: !Sub "/aws/lambda/${IssueCredentialFunction}"
      FilterPattern: " "
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"

  JWKSetFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: uk.gov.di.ipv.cri.common.api.handler.JWKSetHandler::handleRequest
      CodeUri: ../../common-lambdas/jwkset/build/distributions/jwkset.zip
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: di-ipv-cri-address-api-jwkset
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - Statement:
            - Effect: Allow
              Action:
                - kms:GetPublicKey
              Resource:
                - !ImportValue core-infrastructure-CriVcSigningKey1Arn
                - !ImportValue core-infrastructure-CriDecryptionKey1Arn
            - Effect: Allow
              Action:
                - kms:ListKeys
                - kms:ListResourceTags
                - kms:DescribeKey
              Resource: "*"

  JWKSetFunctionLogsSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn:
      - JWKSetFunction
    Condition: IsNotDevEnvironment
    Properties:
      LogGroupName: !Sub "/aws/lambda/${JWKSetFunction}"
      FilterPattern: " "
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"

  AddressTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Sub "address-${AWS::StackName}"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "sessionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "sessionId"
          KeyType: "HASH"

  SessionTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Sub "session-${AWS::StackName}"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "sessionId"
          AttributeType: "S"
        - AttributeName: "authorizationCode"
          AttributeType: "S"
        - AttributeName: "accessToken"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "sessionId"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        - IndexName: "authorizationCode-index"
          KeySchema:
            - AttributeName: "authorizationCode"
              KeyType: "HASH"
          Projection:
            NonKeyAttributes:
              - "sessionId"
              - "redirectUri"
              - "clientId"
            ProjectionType: "INCLUDE"
        - IndexName: "access-token-index"
          KeySchema:
            - AttributeName: "accessToken"
              KeyType: "HASH"
          Projection:
            NonKeyAttributes:
              - "sessionId"
              - "subject"
            ProjectionType: "INCLUDE"
      TimeToLiveSpecification:
        AttributeName: expiryDate
        Enabled: true

  PersonIdentityTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Sub "person-identity-${AWS::StackName}"
      BillingMode: "PAY_PER_REQUEST"
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      AttributeDefinitions:
        - AttributeName: "sessionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "sessionId"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: expiryDate
        Enabled: true

  PublicAddressApiUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    DependsOn:
      - PublicAddressApiStage
    Properties:
      ApiStages:
        - ApiId: !Ref PublicAddressApi
          Stage: !Ref Environment
      Quota:
        Limit: 500000
        Period: DAY
      Throttle:
        BurstLimit: 100 # requests the API can handle concurrently
        RateLimit: 50 # allowed requests per second

  PrivateAddressApiUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    DependsOn:
      - PrivateAddressApiStage
    Properties:
      ApiStages:
        - ApiId: !Ref PrivateAddressApi
          Stage: !Ref Environment
      Quota:
        Limit: 500000
        Period: DAY
      Throttle:
        BurstLimit: 100 # requests the API can handle concurrently
        RateLimit: 50 # allowed requests per second

  LinkUsagePlanApiKey1:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !ImportValue core-infrastructure-ApiKey1
      KeyType: API_KEY
      UsagePlanId: !Ref PublicAddressApiUsagePlan

  LinkUsagePlanApiKey2:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !ImportValue core-infrastructure-ApiKey2
      KeyType: API_KEY
      UsagePlanId: !Ref PublicAddressApiUsagePlan

  ParameterSessionTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/SessionTableName"
      Value: !Sub session-${AWS::StackName}
      Type: String
      Description: session dynamodb table name

  ParameterAddressItemTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/AddressTableName"
      Value: !Sub address-${AWS::StackName}
      Type: String
      Description: address item dynamodb table name

  ParameterPersonIdentityTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/PersonIdentityTableName"
      Value: !Sub person-identity-${AWS::StackName}
      Type: String
      Description: person identity dynamodb table name

  MaxJwtTtlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/MaxJwtTtl"
      Type: String
      Value: !FindInMap [MaxJwtTtlMapping, Environment, !Ref 'Environment']
      Description: default time to live for an JWT in (seconds)

  SessionTtlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/SessionTtl"
      Type: String
      Value: !FindInMap [ SessionTtlMapping, Environment, !Ref 'Environment' ]
      Description: default time to live for an address session item (seconds)

  IPVCoreStubAuthenticationAlgParameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/authenticationAlg"
      Type: String
      Value: !FindInMap [IPVCoreStubAuthenticationAlgMapping, Environment, !Ref 'Environment']

  IPVCoreStubPreProdAuthenticationAlgParameter:
    Condition: IsProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub-pre-prod/jwtAuthentication/authenticationAlg"
      Type: String
      Value: !FindInMap [IPVCoreStubPreProdAuthenticationAlgMapping, Environment, !Ref 'Environment']

  IPVCore1AuthenticationAlgParameter:
    Condition: IsProdLikeEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core/jwtAuthentication/authenticationAlg"
      Type: String
      Value: !FindInMap [IPVCore1AuthenticationAlgMapping, Environment, !Ref 'Environment']

  IPVCoreStubAudienceParameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/audience"
      Type: String
      Value: !FindInMap [ IPVCoreStubAudienceMapping, Environment, !Ref 'Environment' ]

  IPVCoreStubPreProdAudienceParameter:
    Condition: IsProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub-pre-prod/jwtAuthentication/audience"
      Type: String
      Value: !FindInMap [ IPVCoreStubPreProdAudienceMapping, Environment, !Ref 'Environment' ]

  IPVCore1AudienceParameter:
    Condition: IsProdLikeEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core/jwtAuthentication/audience"
      Type: String
      Value: !FindInMap [ IPVCore1AudienceMapping, Environment, !Ref 'Environment' ]

  IPVCoreStubIssuerParameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/issuer"
      Type: String
      Value: !FindInMap [IPVCoreStubIssuerMapping, Environment, !Ref 'Environment']

  IPVCoreStubPreProdIssuerParameter:
    Condition: IsProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub-pre-prod/jwtAuthentication/issuer"
      Type: String
      Value: !FindInMap [IPVCoreStubPreProdIssuerMapping, Environment, !Ref 'Environment']

  IPVCore1IssuerParameter:
    Condition: IsProdLikeEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core/jwtAuthentication/issuer"
      Type: String
      Value: !FindInMap [IPVCore1IssuerMapping, Environment, !Ref 'Environment']

  IPVCoreStubPublicSigningJwkBase64Parameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/publicSigningJwkBase64"
      Type: String
      Value: !FindInMap [IPVCoreStubPublicSigningJwkBase64Mapping, Environment, !Ref 'Environment']

  IPVCoreStubPreProdPublicSigningJwkBase64Parameter:
    Condition: IsProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub-pre-prod/jwtAuthentication/publicSigningJwkBase64"
      Type: String
      Value: !FindInMap [IPVCoreStubPreProdPublicSigningJwkBase64Mapping, Environment, !Ref 'Environment']

  IPVCore1PublicSigningJwkBase64Parameter:
    Condition: IsProdLikeEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core/jwtAuthentication/publicSigningJwkBase64"
      Type: String
      Value: !FindInMap [IPVCore1PublicSigningJwkBase64Mapping, Environment, !Ref 'Environment']

  IPVCoreStubRedirectURIParameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/redirectUri"
      Type: String
      Value: !FindInMap [IPVCoreStubRedirectURIMapping, Environment, !Ref 'Environment']

  IPVCoreStubPreProdRedirectURIParameter:
    Condition: IsProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub-pre-prod/jwtAuthentication/redirectUri"
      Type: String
      Value: !FindInMap [IPVCoreStubPreProdRedirectURIMapping, Environment, !Ref 'Environment']

  IPVCore1RedirectURIParameter:
    Condition: IsProdLikeEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core/jwtAuthentication/redirectUri"
      Type: String
      Value: !FindInMap [IPVCore1RedirectURIMapping, Environment, !Ref 'Environment']

  AuthRequestKmsEncryptionKeyIdParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/AuthRequestKmsEncryptionKeyId"
      Type: String
      Value: !ImportValue core-infrastructure-CriDecryptionKey1Id
      Description: The (KMS) encryption key identifier for decrypting authorisation requests

  OrdnanceSurveyAPIURLParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/OrdnanceSurveyAPIURL"
      Type: String
      Value: !FindInMap [OrdnanceSurveyAPIURLMapping, Environment, !Ref 'Environment']
      Description: Ordnance Survey Postcode Lookup API URL

  VerifiableCredentialIssuerParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/verifiable-credential/issuer"
      Type: String
      Value: !FindInMap [VerifiableCredentialIssuerMapping, Environment, !Ref 'Environment']
      Description: Issuer of the Verifiable Credential

  VerifiableCredentialKmsSigningKeyParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/verifiableCredentialKmsSigningKeyId"
      Type: String
      Value: !ImportValue core-infrastructure-CriVcSigningKey1Id
      Description: Verifiable Credential Key Id

  AccessTokenFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AccessTokenFunction.Arn
      Principal: apigateway.amazonaws.com

  AuthorizationFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AuthorizationFunction.Arn
      Principal: apigateway.amazonaws.com

  SessionFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt SessionFunction.Arn
      Principal: apigateway.amazonaws.com

  PostcodeLookupFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt PostcodeLookupFunction.Arn
      Principal: apigateway.amazonaws.com

  AddressFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AddressFunction.Arn
      Principal: apigateway.amazonaws.com

  IssueCredentialFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt IssueCredentialFunction.Arn
      Principal: apigateway.amazonaws.com

  JWKSetFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt JWKSetFunction.Arn
      Principal: apigateway.amazonaws.com

Outputs:

  AddressApiBaseUrl:
    Description: "Base url of the Address CRI API"
    Value: !Sub "https://${PublicAddressApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/"
    Export:
      Name: !Sub ${AWS::StackName}-AddressApiBaseUrl

  AddressApiGatewayId:
    Description: "API GatewayID of the Address CRI API"
    Value: !Sub "${PublicAddressApi}"
    Export:
      Name: !Sub ${AWS::StackName}-AddressApiGatewayId

  PublicAddressApiBaseUrl:
    Description: "Base url of the public Address CRI API"
    Value: !Sub "https://${PublicAddressApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/"
    Export:
      Name: !Sub ${AWS::StackName}-PublicAddressApiBaseUrl

  PublicAddressApiGatewayId:
    Description: "API GatewayID of the public Address CRI API"
    Value: !Sub "${PublicAddressApi}"
    Export:
      Name: !Sub ${AWS::StackName}-PublicAddressApiGatewayId

  PrivateAddressApiBaseUrl:
    Description: "Base url of the private Address CRI API"
    Value: !Sub "https://${PrivateAddressApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/"
    Export:
      Name: !Sub ${AWS::StackName}-PrivateAddressApiBaseUrl

  PrivateAddressApiGatewayId:
    Description: "API GatewayID of the private Address CRI API"
    Value: !Sub "${PrivateAddressApi}"
    Export:
      Name: !Sub ${AWS::StackName}-PrivateAddressApiGatewayId